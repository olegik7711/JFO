using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace JFO.Views
{
    /// <summary>
    /// Логика взаимодействия для AboutPrograme.xaml
    /// </summary>
    public partial class AboutPrograme : Window
    {
        public AboutPrograme()
        {
            InitializeComponent();
        }
        #region поведение картинок
        private void Img1_MouseEnter(object sender, MouseEventArgs e)
        {
            Img1.Width = 800;
            Img1.Height = 600;
        }
      
        private void Img1_MouseLeave(object sender, MouseEventArgs e)
        {
            Img1.Width = 300;
            Img1.Height = 300;
        }

        private void Img2_MouseEnter(object sender, MouseEventArgs e)
        {
            Img2.Width = 800;
            Img2.Height = 600;
        }

        private void Img2_MouseLeave(object sender, MouseEventArgs e)
        {
            Img2.Width = 300;
            Img2.Height = 300;
        }

        private void Img3_MouseEnter(object sender, MouseEventArgs e)
        {
            Img3.Width = 800;
            Img3.Height = 600;
        }

        private void Img3_MouseLeave(object sender, MouseEventArgs e)
        {
            Img3.Width = 300;
            Img3.Height = 300;
        }
        #endregion

        private void Calc_Checked(object sender, RoutedEventArgs e)
        {
            Oglavlenie.Text = "Как пользоваться модулем \"Калькулятор\"";
            First.FontSize = 14;
            First.FontWeight = FontWeights.Bold;
            First.Text =
        "      Модуль калькулятор предназначен для предварительного расчета физико-химических свойств реактивного\n" +
        " топлива. Расчет можно провести, зная хотя бы одно значение из представленных в модуле свойств. Расчет \n" +
        " производится следующим образом:\n " +
        "   а) Вводите значение известного вам показателя, в соответствующее поле для ввода (поля подписаны);\n" +
        "   б) Нажимаете на клавишу со значком калькулятора;\n" +
        "      Необходимо отметить, что каждое физико-химическое свойство зависит от другого, поэтому, чтобы снизить\n" +
        " погрешность в расчетах, стоит  вводить больше данных, полученных практическими испытаниями. Например: нам \n" +
        " известны значения плотности топлива при 20°С (0.78 г/см^3) и его высоты некоптящего пламени (27 мм), полу-\n" +
        " ченные в результате испытаний (практическим способом), нам необходимо узнать  люминометрическое число(ЛЧ) об-\n" +
        " разца. Проведя расчет, используя значение только плотности, мы получим ЛЧ равное 63, проведя расчет используя\n "+
        " оба известных нам значения, мы получим ЛЧ равное 61, что ближе к практическим измерениям.\n\n"+
        "      Для получения корректного результата, после каждого расчета  обнуляйте данные в полях свойств. Данные об-\n "+
        " нуляются нажатием кнопки \"Обнулить\", на ней изображены две стрелки в форме круга.\n\n"+
        "      Вы можете сохранить результаты расчетов в текстовый файл, нажав кнопку \"Сохранить результаты\", на кнопке\n"+
        " изображен значек папки, либо выбрав пункт главного меню Калькулятор-Сохранить расчеты.\n\n"+
        "      Справа от расчетного блока, расположен блок с графиком зависимости плотности от температуры, меняя положе-\n"+
        " ние указателя мыши на графике, вы можете проследить изменение плотности реактивного топлива от изменения темпе-\n"+
        " ратуры. Числовые значения плотности и температуры отображаются в текстовых полях, расположенных ниже графика. ";
            Img1.Source = new BitmapImage(new Uri("/Images/calc1.jpg", UriKind.Relative));
            Img2.Source = new BitmapImage(new Uri("/Images/calc2.jpg", UriKind.Relative));
            Img3.Source = new BitmapImage(new Uri("/Images/calc3.jpg", UriKind.Relative));

        }

        private void Protocols_Checked(object sender, RoutedEventArgs e)
        {
            First.FontSize = 14;
            First.FontWeight = FontWeights.Bold;
            Oglavlenie.Text = "Как пользоваться модулем \"Протоколы\"";
            First.Text =
        "      Модуль \"Протоколы\" предназначен для формирования стандартных отчетных протоколов испытаний реактивного топ-\n" +
        " лива. Протокол МОПЗ - протокол испытания подразделения 41-й лаборатории, расположенного на МОПЗ. Протокол по \n" +
        " ГОСТ 10227 - полный перечень физико-химических и эксплуатационных свойств реактивного топлива. \n\n" +
        "       Для того, чтобы сформировать протокол, необходимо заполнить поля формы, соответствующими им значениями и нажать\n" +
        " кнопку \"Сформировать протокол\". В результате будет сформирован протокол в формате Word документа.\n\n"+
        "      Результаты испытаний, выполненных на МОПЗ можно сохранить в базе данных, для этого необходимо нажать кнопку \n"+
        " \"Сохранить данные в базе\". Данные будут сохранены в виде таблицы с результатами испытаний\n\n\n\n\n";
            Img1.Source = new BitmapImage(new Uri("/Images/prot1.jpg", UriKind.Relative));
            Img2.Source = new BitmapImage(new Uri("/Images/prot2.jpg", UriKind.Relative));
            Img3.Source = new BitmapImage(new Uri("/Images/prot3.jpg", UriKind.Relative));
        }

        private void DataBases_Checked(object sender, RoutedEventArgs e)
        {
            First.FontSize = 14;
            First.FontWeight = FontWeights.Bold;
            Oglavlenie.Text = "Как пользоваться модулем \"Базы данных\"";
            First.Text =
         "      Модуль \"Базы данных\" предназначен для хранения и манипуляций с данными. В модуле представлены две базы данных - \n" +
         " база данных с результатами испытаний МОПЗ и база данных с отчетами 41-й лаборатории ВНИИ НП по выполненным работам для \n" +
         " НПЗ. Информация в базе данных МОПЗ представлена в виде таблицы с результаттами испытаний по методам и графического файла\n" +
         " c результатом испытания на аппарате JFTOT. Столбцы таблицы помечены соответствующими именами.  В базе данных ВНИИ НП \n" +
         " хранятся файлы отчетов с расширением .docx  и .pdf\n\n" +
         "      Для манипуляции данными в модуле предусмотрены блоки  управления записями баз данных. С помощью блока \"Удалить строку\"\n " +
         " можно удалить строку, введя ее ID  в поле для удаления и нажав кнопку \"Удалить\".\n " +
         "      Воспользовавшись блоком  \"Добавить/Извлечь файл можно добавить файл в базу данных - файл будет добавлен в предназ-\n" +
         " наченную для него ячейку, либо извлечен из соответствующей строки базы данных, после того как вы введете ID записи в которую\n" +
         " вы хотите добавить или из которой хотите извлечь файл, и нажмете на соответствующую кнопку. При сохранении файла нужно помнить\n" +
         " о его расширении - сохранять можно только определенные файлы.\n" +
         "      Блок  \"Найти запись\" предназначен для поиска строк по заданным параметрам. Для поиска необходимо выбрать в выпадающем \n"+
         " списке имя столбца по которому вы хотите выполнить поиск а в текстовое поле ввести слово для конкретизации поискового запроса\n"+
         " после нажать кнопку \"Найти запись\". В результате будут выданы все строки, соответствующие параметрам поиска.\n"+
         "      Блок \"Сортировать записи\" дает возможность сортировать записи по заданным вами критериям сортировки. В выпадающих списках\n"+
         " нужно выбрать столбец по которому вы хотите отсортировать запись и направление сортировки, затем нажать кнопку \"Сортировать\", в \n"+
         " результате таблица отсортируется в нужном вам порядке.\n"+
         "      Также есть возможность менять значения ячеек, удалять значения в ячейках непосредственно в таблице. После внесенных изменений\n"+
         " необходимо нажать кнопку \"Сохранить изменения, которая находится прямо над таблицей(на кнопке изображены две голубых стрелочки в фор-\n"+
         " круга. Там же расположена кнопка, с помощью которой можно загрузить таблицу из базы данных по новой, на этой кнопке нарисован значок\n"+
         " таблицы";
            Img1.Source = new BitmapImage(new Uri("/Images/Base1.jpg", UriKind.Relative));
            Img2.Source = new BitmapImage(new Uri("/Images/Base2.jpg", UriKind.Relative));
            Img3.Source = null;
        }

        private void ScrollViewer_Loaded(object sender, RoutedEventArgs e)
        {
           Oglavlenie.FontSize = 20;
            Oglavlenie.FontWeight = FontWeights.Bold;
            Oglavlenie.Text = "      Чтобы получить необходимую вам информацию, выберите пункт в блоке \"Содержание\".\n" +
                         "      Информация появится ниже.";
            Img1.Source = null;
            Img2.Source = null;
            Img3.Source = null;
        }
    }
}
